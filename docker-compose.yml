version: "3.8"

# Load variables from developer overrides (.env) and defaults (.env.example)
# Both files live in the repo root; .env is git-ignored.

services:
  # ───────── Infrastructure ─────────
  redis:
    image: redis:7-alpine
    ports: ["6379:6379"]

  timescaledb:
    image: timescale/timescaledb:latest-pg16
    environment:
      POSTGRES_DB: tradebot
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports: ["5432:5432"]
    volumes:
      - timescale_data:/var/lib/postgresql/data

  # ───────── Core micro-services ─────
  market_data:
    build: .
    command: python -m tradebot.market_data.service
    env_file: [ .env, .env.example ]
    environment:
      - SERVICE_NAME=market_data
    volumes:
      - ./symbols_cache.json:/app/symbols_cache.json:ro
    depends_on: [ redis ]

  strategy:
    build: .
    command: python -m tradebot.strategy.service
    env_file: [ .env, .env.example ]
    environment:
      - SERVICE_NAME=strategy
    depends_on: [ redis ]

  execution:
    build: .
    command: python -m tradebot.execution.service
    env_file: [ .env, .env.example ]
    environment:
      - SERVICE_NAME=execution
    depends_on: [ redis ]

  storage:
    build: .
    command: python -m tradebot.storage.timeseries_service
    env_file: [ .env, .env.example ]
    environment:
      - SERVICE_NAME=storage
    depends_on: [ redis, timescaledb ]

  # ───────── API + Dashboard ─────────
  api:
    build: .
    command: python -m tradebot.api.history_service
    env_file: [ .env, .env.example ]
    environment:
      - SERVICE_NAME=api
    ports: ["8000:8000"]
    depends_on: [ timescaledb ]

  dashboard:
    build: .
    # Mount dashboard directory so HTML/JS edits hot-reload
    volumes:
      - ./tradebot/dashboard:/app/tradebot/dashboard
    command: python -m tradebot.dashboard.main
    env_file: [ .env, .env.example ]
    environment:
      - SERVICE_NAME=dashboard
    ports: ["8001:8001"]
    depends_on: [ redis, timescaledb ]

volumes:
  timescale_data: 